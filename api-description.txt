******Authentication******

1. Sign up
Path: /sign-up
Method: POST
Request:
    Body: 
        {
            mail:       string  (required),
            password:   string  (required),
            authMethod: string  (required)
        }
    // Hien tai thi authMethod de "website registered" vi chua lam dang ky bang google voi facebook
Response:
    {
        "User registered successfully"
    }    

2. Sign in
Path: /sign-in
Method: POST
Request:
    Body: 
        {
            mail:   string  (required),
            password:   string  (required)
        }
Response:
    {
        jwt: string 
    }    
    // Trong jwt token co json chua userName va avatar, decode ra de lay


******Tasks****** 

3. Create task (USER)
Path: /task
Method: PUT
Request:
    Headers:
        {
            authorization: token (token nhan khi dang nhap)
        }
    Body: 
        {
            taskName:       string  (required),
            description:    string  (required),
            dueDate:        string  (required, format "YYYY-MM-DD"),
            priorityId:     int     (required),
            labelId:        int     (required)
        }
Response:
    {
        "Created task successfully"
    }    

4. Get today tasks (USER)
Path: /today-tasks
Method: GET
Request: 
    Headers: 
        {
            authorization: token (token nhan khi dang nhap)
        }
Response:
    [
        {
            task_id:        int,
            task_name:      string,
            description:    string,
            due_date:       "2023-11-18T17:00:00.000Z",
            priority_id:    int,
            label_id:       int,
            user_id:        int,
            created_at:     "2023-11-19T10:47:33.000Z"
        }
    ]

5. Get upcoming tasks (USER)
Path: /upcoming-tasks
Method: GET
Request: 
    Headers: 
        {
            authorization: token (token nhan khi dang nhap)
        }
Response:
    [
        {
            task_id:        int,
            task_name:      string,
            description:    string,
            due_date:       "2023-11-18T17:00:00.000Z",
            priority_id:    int,
            label_id:       int,
            user_id:        int,
            created_at:     "2023-11-19T10:47:33.000Z"
        }
    ]

6. Get all tasks (USER)
Path: /all-tasks
Method: GET
Request: 
    Headers: 
        {
            authorization: token (token nhan khi dang nhap)
        }
Response:
    [
        {
            task_id:        int,
            task_name:      string,
            description:    string,
            due_date:       "2023-11-18T17:00:00.000Z",
            priority_id:    int,
            label_id:       int,
            user_id:        int,
            created_at:     "2023-11-19T10:47:33.000Z"
        }
    ]

7. Get all tasks (USER)
Path: /all-tasks
Method: GET
Request: 
    Headers: 
        {
            authorization: token (token nhan khi dang nhap)
        }
Response:
    [
        {
            task_id:        int,
            task_name:      string,
            description:    string,
            due_date:       "2023-11-18T17:00:00.000Z",
            priority_id:    int,
            label_id:       int,
            user_id:        int,
            created_at:     "2023-11-19T10:47:33.000Z"
        }
    ]

8. Get all tasks (ADMIN)
Path: /admin/all-tasks
Method: GET
Request: 
    Headers: 
        {
            authorization: token (token nhan khi dang nhap)
        }
Response:
    [
        {
            task_id:        int,
            task_name:      string,
            description:    string,
            due_date:       "2023-11-18T17:00:00.000Z",
            priority_id:    int,
            label_id:       int,
            user_id:        int,
            created_at:     "2023-11-19T10:47:33.000Z"
            user_name:      string
        }
    ]

9. Delete task (USER)
Path: /task
Method: DELETE
Request:
    Headers:
        {
            authorization: token (token nhan khi dang nhap)
        }
    Body: 
        {
            taskId: int
        }
Response:
    {
        "Deleted task successfully"
    }  